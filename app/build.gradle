apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        applicationId "com.teamc.mira.iwashere"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 0
        versionName "0.4 Beta"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {

            buildConfigField "String", "API_HOSTNAME", "\"" + "https://iwashere.fe.up.pt" + "\""


            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {

            String host;
            Enumeration en = NetworkInterface.getNetworkInterfaces();
            boolean hasFound = false;
            while (en.hasMoreElements() && !hasFound) {
                NetworkInterface ni = (NetworkInterface) en.nextElement();
                Enumeration ee = ni.getInetAddresses();
                while (ee.hasMoreElements() && !hasFound) {
                    InetAddress ia = (InetAddress) ee.nextElement();

                    if ((!ia.isLoopbackAddress()) && ia instanceof Inet4Address){
                        host = ia.getHostAddress();
                        hasFound = true;
                    }
                }
            }
            def port = ":8080"
            def protocol = "http://"
            buildConfigField "String", "API_HOSTNAME",  "\"" + protocol + host + port + "\""
        }
    }
    lintOptions{
        abortOnError false
        lintConfig file('lint.xml')
    }
    testOptions{
//        unitTests.returnDefaultValues = true;
    }
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.google.firebase:firebase-storage:10.2.0'
    compile 'com.google.firebase:firebase-auth:10.2.0'
    compile 'com.facebook.android:facebook-android-sdk:[4,5)'
    compile 'com.google.android.gms:play-services-auth:10.2.0'
    compile 'com.google.android.gms:play-services-maps:10.2.0'
    compile 'com.google.android.gms:play-services-location:10.2.0'
    compile 'com.google.maps.android:android-maps-utils:0.5+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:25.0.0'
    compile 'com.android.volley:volley:1.0.0'
    compile "com.android.support:support-v4:+"
    compile 'com.squareup.picasso:picasso:2.3.2'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.daimajia.slider:library:1.1.5@aar'
    compile 'com.github.claudiodegio:MsvSearch:1.0.0'


    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'

}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.3.0'
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'